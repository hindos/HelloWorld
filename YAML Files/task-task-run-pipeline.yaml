apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: '2021-03-29T20:18:29Z'
  generation: 10
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:params': {}
          'f:stepTemplate':
            .: {}
            'f:name': {}
            'f:resources': {}
            'f:volumeMounts': {}
          'f:steps': {}
          'f:volumes': {}
      manager: Mozilla
      operation: Update
      time: '2021-03-29T20:58:18Z'
  name: task-run-pipeline
  namespace: henda
  resourceVersion: '13430010'
  selfLink: /apis/tekton.dev/v1beta1/namespaces/henda/tasks/task-run-pipeline
  uid: ef802162-181b-415a-bf13-92f82a83016a
spec:
  params:
    - name: git-url
      type: string
    - default: master
      name: git-revision
      type: string
    - default: /source
      name: source-dir
      type: string
    - default: 'quay.io/ibmgaragecloud/ibmcloud-dev:v2.0.4'
      name: tools-image
      type: string
  stepTemplate:
    name: ''
    resources: {}
    volumeMounts:
      - mountPath: $(params.source-dir)
        name: source
  steps:
    - env:
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: ibm-git-credentials
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: ibm-git-credentials
              optional: true
      image: $(params.tools-image)
      name: git-clone
      resources: {}
      script: >
        set +x

        git clone "$(echo $(params.git-url) | awk -F '://' '{print
        $1}')://${GIT_USERNAME}:${GIT_PASSWORD}@$(echo $(params.git-url) | awk
        -F '://' '{print $2}')" $(params.source-dir)

        set -x

        cd $(params.source-dir)

        git checkout master
    - env:
        - name: REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REGISTRY_PASSWORD
              name: ibm-registry-access
              optional: false
      image: $(params.tools-image)
      name: deploy
      resources: {}
      script: >
        #!/usr/bin/env bash

        PIPELINE_FILE=`echo $(params.source-dir)/pipeline-run.yaml | sed 's/
        *$//g'`


        if [[ -f "${PIPELINE_FILE}" ]];

        then
          echo "Project pipeline file ${PIPELINE_FILE} found."
          echo "oc create -f $(params.source-dir)/pipeline-run.yaml"
          oc create -f $(params.source-dir)/pipeline-run.yaml
        else
          echo "No project pipeline file ${PIPELINE_FILE} found. Not running pipeline."
          exit 1
        fi
      workingDir: $(params.source-dir)
  volumes:
    - emptyDir: {}
      name: source
